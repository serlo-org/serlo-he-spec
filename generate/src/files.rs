use serde::{Deserialize, Serialize};
use serlo_he_spec_meta::{identifier_from_locator, Multiplicity, Plugin, Specification};
use std::collections::HashMap;
use std::error::Error;
use std::fmt;
use std::path::PathBuf;

#[derive(Debug, Clone, PartialEq, Hash)]
pub struct GenerationError {
    /// why file generation has failed.
    pub msg: String,
}

impl GenerationError {
    pub fn new(message: String) -> Self {
        Self { msg: message }
    }
}

impl fmt::Display for GenerationError {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}", self.msg)
    }
}

impl Error for GenerationError {
    fn description(&self) -> &str {
        &self.msg
    }
}

/// A generated file with its generated contents.
#[derive(Debug, Serialize, Deserialize)]
pub struct GeneratedFile {
    pub path: PathBuf,
    pub content: String,
}

#[macro_export]
macro_rules! REACT_DEFINITION {
    () => {
        r"
// !!! this file was generated by serlo-he-specgen, do not edit manually !!!
export {{ {} }} from './state'
import {{ plugin }} from './plugin'
import {{ {} }} from './{}.component'

export default {{
    ...plugin,
    Component: {},
    text: '{}'
}}"
    };
}

#[macro_export]
macro_rules! PACKAGE_JSON_PATCH {
    () => {
        r#"{{
    "name": {:?},
    "version": {:?},
    "peerDependencies": {{
        {}
    }}
}}
        "#
    };
}

#[macro_export]
macro_rules! README {
    () => {
        r#"# {}

Attributes: `{}`

{}

Generated by serlo-he-specgen, do not edit manually!
        "#
    };
}

#[macro_export]
macro_rules! STATE {
    () => {
        r#"
// !!! this file was generated by serlo-he-specgen, do not edit manually !!!
{}

export interface {}State {{
{}
}}
        "#
    };
}
